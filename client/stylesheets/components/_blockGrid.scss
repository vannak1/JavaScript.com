// *************************************
//
//   Block Grid
//   -> Alignment divisions (display: block)
//
// -------------------------------------
//   Template (Haml)
// -------------------------------------
//
// .blockGrid
//
//   .blockGrid-box[center 1of2|...]
//     / ...
//
//   .blockGrid-box[center 1of2|...]
//     / ...
//
// *************************************

// -------------------------------------
//   Base
// -------------------------------------

.blockGrid {
  display: block;
  margin-left: -$g-gutter;

  @include group;
}

// -------------------------------------
//   Modifiers
// -------------------------------------

// -------------------------------------
//   Scaffolding
// -------------------------------------

.blockGrid-box {
  box-sizing: border-box;
  margin: 0;
  padding-left: $g-gutter;
  width: 100%;
}

// Modifiers

.blockGrid-box--centered {
  margin-left: auto;
  margin-right: auto;
}

// Setup

@mixin g-device-type($namespace: "") {
  .blockGrid-box--#{$namespace}1of1 {
    width: 100%;
  }

  @for $unit from 1 through $g-columns {
    @for $column from 1 to $unit {
      .blockGrid-box--#{$namespace}#{$column}of#{$unit} {
        width: percentage($column / $unit);
      }

      @for $division from 1 to $unit {
        @if $column % $division == 0 and $unit % $division == 0 {
          .blockGrid-box--#{$namespace}#{$column / $division}of#{$unit / $division} {
            @extend .blockGrid-box--#{$namespace}#{$column}of#{$unit};
          }
        }
      }
    }
  }
}

@include g-device-type;

@each $device in $g-defaults {
  @media screen and (min-width: nth($device, 2)) {
    @include g-device-type("#{nth($device, 1)}--");
  }
}
